function ER_Plot(G,ms,addText)
% ER_Plot plots ER-graph G generated by function ER_Graphs.
% Inputs:
%   G   - the adjacency matrix (1 for connected nodes, 0 otherwise).
%   ms  -  marker size,controls the size of each node in the graph
%   addText -  toggles text display (1 - on, 0 off).
% Example:
%   G = ER_Graphs(40,0.1,10);
%   ER_Plot(G,6,1);
% Note: The color of each node is computed based on the its degree. 

% Created by Pablo Blinder. blinderp@bgu.ac.il
% Updated 25/01/2005
% Revised by Hu Yong,Jan,2011

% ###### Input check #########
error(nargchk(1,3,nargin,'struct'));
if nargin < 2
    ms      = 6;
    addText = 1;
elseif nargin < 3 
    addText = 1;
end
% ###### End check #########

N = length(G);          %number of nodes
G(1:(N+1):end) = 0;     %clear self-edges
% M = nnz(G);             %number of edges

% Get (x,y) coordinates
[x,y] = Get_Coord(N,[0,0],10);          %original point as center,radius=10

% Generate plot. Decompose to single lines for more detailed formatting
figure('Name','ER_Figure');hold on;
[xc,yc] = gplot(G,[x,y]);
xc      = xc(~isnan(xc));               %delete nan-elements
xc      = reshape(xc,2,length(xc)/2);
yc      = yc(~isnan(yc));
yc      = reshape(yc,2,length(yc)/2);
hLines  = line(xc,yc);
set(hLines,'Color','k');

gdegree = full(sum(G,2));               %for symmetry,degree of graph
gdegset = unique(setdiff(gdegree,0));   %set of degree
gdegree(gdegree<1) = 1;                 %scale lowest to first 
map     = jet(max(gdegset));
pv      = num2cell(map(gdegree,:),2);
if(gdegset == 1); gdegset = 2; end      %safeguard aginst single values
set(gca,'CLim',[1,max(gdegset)]);

% Get the handle of points and configure
h = zeros(N,1);
for i = 1:N
    h(i) = plot(x(i),y(i),'ko');
end

pn = {'MarkerFaceColor'};
set(h,'LineWidth',1,'MarkerEdgeColor','k','MarkerSize',ms,pn,pv);
colormap(map);

% Adding text
if(addText)
    for i = 1:2:N
        text(x(i)*1.1,y(i)*1.1,num2str(i));
    end
end

% Figure & axis configuration
set(gca,'Visible','Off','YDir','reverse');
set(gcf,'Color','w')

% Colorbar configuration
hc = colorbar;
set(hc,'FontSize',8,'FontW','Demi')
set(hc,'Visible','off')

%============= Subfunction ================
function [x,y] = Get_Coord(N,center,radius)
% Draw a circle,(x,y) is a coordinate on it
% Input:
%   N - the number of nodes
%   center - center coordinate of circle,like [0,0]
%   radius - a positive integer

if nargin < 2
    center = [0,0];
    radius = 10;
elseif nargin < 3
    radius = 10;
end
    
theta  = linspace(0,2*pi,N+1);
rho    = ones(1,N+1);                   %fit radius and N
[X,Y]  = pol2cart(theta',rho');
X      = X + center(1);
Y      = Y + center(2);
x      = X(1:end-1)*radius;
y      = Y(1:end-1)*radius;